// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.5.0
// source: rpc/extractsource/extractsource.proto

package extractsource

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace       string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ExtractSourceID string `protobuf:"bytes,2,opt,name=extractSourceID,proto3" json:"extractSourceID,omitempty"`
	FileType        string `protobuf:"bytes,3,opt,name=fileType,proto3" json:"fileType,omitempty"`
	FileName        string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
}

func (x *UploadInfo) Reset() {
	*x = UploadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadInfo) ProtoMessage() {}

func (x *UploadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadInfo.ProtoReflect.Descriptor instead.
func (*UploadInfo) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{0}
}

func (x *UploadInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UploadInfo) GetExtractSourceID() string {
	if x != nil {
		return x.ExtractSourceID
	}
	return ""
}

func (x *UploadInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UploadInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadToExtractSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadToExtractSourceRequest_Info
	//	*UploadToExtractSourceRequest_ChunkData
	Data isUploadToExtractSourceRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadToExtractSourceRequest) Reset() {
	*x = UploadToExtractSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadToExtractSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadToExtractSourceRequest) ProtoMessage() {}

func (x *UploadToExtractSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadToExtractSourceRequest.ProtoReflect.Descriptor instead.
func (*UploadToExtractSourceRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{1}
}

func (m *UploadToExtractSourceRequest) GetData() isUploadToExtractSourceRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadToExtractSourceRequest) GetInfo() *UploadInfo {
	if x, ok := x.GetData().(*UploadToExtractSourceRequest_Info); ok {
		return x.Info
	}
	return nil
}

func (x *UploadToExtractSourceRequest) GetChunkData() []byte {
	if x, ok := x.GetData().(*UploadToExtractSourceRequest_ChunkData); ok {
		return x.ChunkData
	}
	return nil
}

type isUploadToExtractSourceRequest_Data interface {
	isUploadToExtractSourceRequest_Data()
}

type UploadToExtractSourceRequest_Info struct {
	Info *UploadInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadToExtractSourceRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*UploadToExtractSourceRequest_Info) isUploadToExtractSourceRequest_Data() {}

func (*UploadToExtractSourceRequest_ChunkData) isUploadToExtractSourceRequest_Data() {}

type UploadToExtractSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileSize uint32 `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (x *UploadToExtractSourceResponse) Reset() {
	*x = UploadToExtractSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadToExtractSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadToExtractSourceResponse) ProtoMessage() {}

func (x *UploadToExtractSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadToExtractSourceResponse.ProtoReflect.Descriptor instead.
func (*UploadToExtractSourceResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{2}
}

func (x *UploadToExtractSourceResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *UploadToExtractSourceResponse) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{3}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{4}
}

type CreateExtractSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateExtractSourceRequest) Reset() {
	*x = CreateExtractSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExtractSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtractSourceRequest) ProtoMessage() {}

func (x *CreateExtractSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtractSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateExtractSourceRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{5}
}

type CreateExtractSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateExtractSourceResponse) Reset() {
	*x = CreateExtractSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExtractSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtractSourceResponse) ProtoMessage() {}

func (x *CreateExtractSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtractSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateExtractSourceResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{6}
}

type DeleteExtractSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtractSourceName string `protobuf:"bytes,1,opt,name=extractSourceName,proto3" json:"extractSourceName,omitempty"`
}

func (x *DeleteExtractSourceRequest) Reset() {
	*x = DeleteExtractSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExtractSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExtractSourceRequest) ProtoMessage() {}

func (x *DeleteExtractSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExtractSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteExtractSourceRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteExtractSourceRequest) GetExtractSourceName() string {
	if x != nil {
		return x.ExtractSourceName
	}
	return ""
}

type DeleteExtractSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMessage string `protobuf:"bytes,1,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	StatusCode    int32  `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *DeleteExtractSourceResponse) Reset() {
	*x = DeleteExtractSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExtractSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExtractSourceResponse) ProtoMessage() {}

func (x *DeleteExtractSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExtractSourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteExtractSourceResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteExtractSourceResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *DeleteExtractSourceResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type UploadByURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileURL         string `protobuf:"bytes,1,opt,name=fileURL,proto3" json:"fileURL,omitempty"`
	ExtractSourceID string `protobuf:"bytes,2,opt,name=extractSourceID,proto3" json:"extractSourceID,omitempty"`
	PipelineID      string `protobuf:"bytes,3,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *UploadByURLRequest) Reset() {
	*x = UploadByURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadByURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadByURLRequest) ProtoMessage() {}

func (x *UploadByURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadByURLRequest.ProtoReflect.Descriptor instead.
func (*UploadByURLRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{9}
}

func (x *UploadByURLRequest) GetFileURL() string {
	if x != nil {
		return x.FileURL
	}
	return ""
}

func (x *UploadByURLRequest) GetExtractSourceID() string {
	if x != nil {
		return x.ExtractSourceID
	}
	return ""
}

func (x *UploadByURLRequest) GetPipelineID() string {
	if x != nil {
		return x.PipelineID
	}
	return ""
}

type UploadByURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMessage string `protobuf:"bytes,1,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	StatusCode    int32  `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *UploadByURLResponse) Reset() {
	*x = UploadByURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadByURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadByURLResponse) ProtoMessage() {}

func (x *UploadByURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadByURLResponse.ProtoReflect.Descriptor instead.
func (*UploadByURLResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{10}
}

func (x *UploadByURLResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *UploadByURLResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type StartAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtractSourceID string `protobuf:"bytes,1,opt,name=extractSourceID,proto3" json:"extractSourceID,omitempty"`
	PipelineID      string `protobuf:"bytes,2,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *StartAPIRequest) Reset() {
	*x = StartAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAPIRequest) ProtoMessage() {}

func (x *StartAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAPIRequest.ProtoReflect.Descriptor instead.
func (*StartAPIRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{11}
}

func (x *StartAPIRequest) GetExtractSourceID() string {
	if x != nil {
		return x.ExtractSourceID
	}
	return ""
}

func (x *StartAPIRequest) GetPipelineID() string {
	if x != nil {
		return x.PipelineID
	}
	return ""
}

type StartAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMessage string `protobuf:"bytes,1,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	StatusCode    int32  `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *StartAPIResponse) Reset() {
	*x = StartAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAPIResponse) ProtoMessage() {}

func (x *StartAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAPIResponse.ProtoReflect.Descriptor instead.
func (*StartAPIResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{12}
}

func (x *StartAPIResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *StartAPIResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type StopAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtractSourceID string `protobuf:"bytes,1,opt,name=extractSourceID,proto3" json:"extractSourceID,omitempty"`
	PipelineID      string `protobuf:"bytes,2,opt,name=pipelineID,proto3" json:"pipelineID,omitempty"`
}

func (x *StopAPIRequest) Reset() {
	*x = StopAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAPIRequest) ProtoMessage() {}

func (x *StopAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAPIRequest.ProtoReflect.Descriptor instead.
func (*StopAPIRequest) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{13}
}

func (x *StopAPIRequest) GetExtractSourceID() string {
	if x != nil {
		return x.ExtractSourceID
	}
	return ""
}

func (x *StopAPIRequest) GetPipelineID() string {
	if x != nil {
		return x.PipelineID
	}
	return ""
}

type StopAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMessage string `protobuf:"bytes,1,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	StatusCode    int32  `protobuf:"varint,2,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *StopAPIResponse) Reset() {
	*x = StopAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_extractsource_extractsource_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAPIResponse) ProtoMessage() {}

func (x *StopAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_extractsource_extractsource_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAPIResponse.ProtoReflect.Descriptor instead.
func (*StopAPIResponse) Descriptor() ([]byte, []int) {
	return file_rpc_extractsource_extractsource_proto_rawDescGZIP(), []int{14}
}

func (x *StopAPIResponse) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *StopAPIResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

var File_rpc_extractsource_extractsource_proto protoreflect.FileDescriptor

var file_rpc_extractsource_extractsource_proto_rawDesc = []byte{
	0x0a, 0x25, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x1c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x57, 0x0a, 0x1d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x63, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x78, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22,
	0x5b, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22,
	0x57, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x8f, 0x05, 0x0a, 0x0d, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x29, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x29, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2b, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x54, 0x0a,
	0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x21, 0x2e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x50, 0x49, 0x12,
	0x1e, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x50, 0x49, 0x12, 0x1d, 0x2e, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41,
	0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13, 0x5a, 0x11, 0x72, 0x70,
	0x63, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_extractsource_extractsource_proto_rawDescOnce sync.Once
	file_rpc_extractsource_extractsource_proto_rawDescData = file_rpc_extractsource_extractsource_proto_rawDesc
)

func file_rpc_extractsource_extractsource_proto_rawDescGZIP() []byte {
	file_rpc_extractsource_extractsource_proto_rawDescOnce.Do(func() {
		file_rpc_extractsource_extractsource_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_extractsource_extractsource_proto_rawDescData)
	})
	return file_rpc_extractsource_extractsource_proto_rawDescData
}

var file_rpc_extractsource_extractsource_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_rpc_extractsource_extractsource_proto_goTypes = []interface{}{
	(*UploadInfo)(nil),                    // 0: extractsource.UploadInfo
	(*UploadToExtractSourceRequest)(nil),  // 1: extractsource.UploadToExtractSourceRequest
	(*UploadToExtractSourceResponse)(nil), // 2: extractsource.UploadToExtractSourceResponse
	(*PingRequest)(nil),                   // 3: extractsource.PingRequest
	(*PingResponse)(nil),                  // 4: extractsource.PingResponse
	(*CreateExtractSourceRequest)(nil),    // 5: extractsource.CreateExtractSourceRequest
	(*CreateExtractSourceResponse)(nil),   // 6: extractsource.CreateExtractSourceResponse
	(*DeleteExtractSourceRequest)(nil),    // 7: extractsource.DeleteExtractSourceRequest
	(*DeleteExtractSourceResponse)(nil),   // 8: extractsource.DeleteExtractSourceResponse
	(*UploadByURLRequest)(nil),            // 9: extractsource.UploadByURLRequest
	(*UploadByURLResponse)(nil),           // 10: extractsource.UploadByURLResponse
	(*StartAPIRequest)(nil),               // 11: extractsource.StartAPIRequest
	(*StartAPIResponse)(nil),              // 12: extractsource.StartAPIResponse
	(*StopAPIRequest)(nil),                // 13: extractsource.StopAPIRequest
	(*StopAPIResponse)(nil),               // 14: extractsource.StopAPIResponse
}
var file_rpc_extractsource_extractsource_proto_depIdxs = []int32{
	0,  // 0: extractsource.UploadToExtractSourceRequest.info:type_name -> extractsource.UploadInfo
	3,  // 1: extractsource.ExtractSource.Ping:input_type -> extractsource.PingRequest
	5,  // 2: extractsource.ExtractSource.CreateExtractSource:input_type -> extractsource.CreateExtractSourceRequest
	7,  // 3: extractsource.ExtractSource.DeleteExtractSource:input_type -> extractsource.DeleteExtractSourceRequest
	1,  // 4: extractsource.ExtractSource.UploadToExtractSource:input_type -> extractsource.UploadToExtractSourceRequest
	9,  // 5: extractsource.ExtractSource.UploadByURL:input_type -> extractsource.UploadByURLRequest
	11, // 6: extractsource.ExtractSource.StartAPI:input_type -> extractsource.StartAPIRequest
	13, // 7: extractsource.ExtractSource.StopAPI:input_type -> extractsource.StopAPIRequest
	4,  // 8: extractsource.ExtractSource.Ping:output_type -> extractsource.PingResponse
	6,  // 9: extractsource.ExtractSource.CreateExtractSource:output_type -> extractsource.CreateExtractSourceResponse
	8,  // 10: extractsource.ExtractSource.DeleteExtractSource:output_type -> extractsource.DeleteExtractSourceResponse
	2,  // 11: extractsource.ExtractSource.UploadToExtractSource:output_type -> extractsource.UploadToExtractSourceResponse
	10, // 12: extractsource.ExtractSource.UploadByURL:output_type -> extractsource.UploadByURLResponse
	12, // 13: extractsource.ExtractSource.StartAPI:output_type -> extractsource.StartAPIResponse
	14, // 14: extractsource.ExtractSource.StopAPI:output_type -> extractsource.StopAPIResponse
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_extractsource_extractsource_proto_init() }
func file_rpc_extractsource_extractsource_proto_init() {
	if File_rpc_extractsource_extractsource_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_extractsource_extractsource_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadToExtractSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadToExtractSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExtractSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExtractSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExtractSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExtractSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadByURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadByURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_extractsource_extractsource_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_extractsource_extractsource_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UploadToExtractSourceRequest_Info)(nil),
		(*UploadToExtractSourceRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_extractsource_extractsource_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_extractsource_extractsource_proto_goTypes,
		DependencyIndexes: file_rpc_extractsource_extractsource_proto_depIdxs,
		MessageInfos:      file_rpc_extractsource_extractsource_proto_msgTypes,
	}.Build()
	File_rpc_extractsource_extractsource_proto = out.File
	file_rpc_extractsource_extractsource_proto_rawDesc = nil
	file_rpc_extractsource_extractsource_proto_goTypes = nil
	file_rpc_extractsource_extractsource_proto_depIdxs = nil
}
